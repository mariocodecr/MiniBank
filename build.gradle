plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

group = 'com.minibank'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

sourceCompatibility = '21'
targetCompatibility = '21'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'io.confluent:kafka-avro-serializer:7.4.0'
	implementation 'io.confluent:kafka-schema-registry-client:7.4.0'
	implementation 'org.apache.avro:avro:1.11.3'
	implementation 'org.flywaydb:flyway-core:11.0.0'
	implementation 'org.flywaydb:flyway-database-postgresql:11.0.0'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'com.twilio.sdk:twilio:9.2.0'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework:spring-aspects'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:kafka'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'au.com.dius.pact.consumer:junit5:4.6.1'
	testImplementation 'au.com.dius.pact.provider:junit5:4.6.1'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

repositories {
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven/"
	}
}

// Configure Avro source directories
avro {
    createSetters = false
    stringType = 'String'
}

tasks.named('test') {
	useJUnitPlatform()
}
